{
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
d += leftPrecedence = rightPrecedence = ++operatorInfo.value().Precedence()[3234 + a + ind % n].foo();
}